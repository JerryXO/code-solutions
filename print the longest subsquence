//printing the longest subsequence

#include<bits/stdc++.h>
using namespace std;

void longest_subsequence(string s1,string s2,int m,int n){
    int t[m+1][n+1];
    for(int i=0;i<m+1;i++){
        for(int j=0;j<n+1;j++){
            if(i==0 || j==0){
                t[i][j]=0;
            }
            else if(s1[i-1]==s2[j-1]){
                t[i][j]=1+t[i-1][j-1];
            }
            else{
                t[i][j]=max(t[i][j-1],t[i-1][j]);
            }
        }
    }

    string s="";
    int i=m,j=n;
    while(i>0 && j>0){
        if(s1[i-1]==s2[j-1]){
            s.push_back(s1[i-1]);
            i--;
            j--;
        }
        else{
            if(t[i][j-1]>t[i-1][j]){
                j--;
            }
            else{
                i--;
            }
        }
    }
    reverse(s.begin(),s.end());
    cout<<s;
}

int main(){
    string s1="AGGTAB";
    string s2="GXTXAYB";
    int m=s1.length();
    int n=s2.length();
    longest_subsequence(s1,s2,m,n);
    return 0;
}

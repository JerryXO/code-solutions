

#include<bits/stdc++.h>
using namespace std;

int kth_smallest(int arr[],int n,int k){
  priority_queue<int>max_heap;
  for(int i=0;i<n;i++){
    max_heap.push(arr[i]);
    if(max_heap.size()>0){
      max_heap.pop();
    }
  }
  return max_heap.top();
}


int kth_largest(int arr[],int n,int k){
  priority_queue<int,vector<int>,greater<int>>min_heap;
  for(int i=0;i<n;i++){
    min_heap.push(arr[i]);
    if(min_heap.size()>k){
      min_heap.pop();
    }
  }
  return min_heap.pop();
}


time complexity: O(nlogk)
